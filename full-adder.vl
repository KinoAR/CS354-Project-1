module onebit_halfadder(A, B, S, C);
  input A, B;
  output S, C;
  wire S1, C1;
  //Sum
  xor gate1(S, A, B);
  //Carry
  and gate2(C, A, B);
endmodule

module full_adder(A, B, D, S, C);
  input A, B, D;
  output S, C; //S - Sum  & C - Carry Out
  wire w1, w2, w3, w4;
  onebit_halfadder halfadder1(A, B, w1, w2),
                   halfadder2(w1, D, S, w3);
  or gate1(C, w2, w3);
endmodule

module test_full_adder;
  reg A, B, C;
  wire w1, w2;
  full_adder fa1(A, B, C, w1, w2);
  initial
    begin
      $display("Time\tA\tB\tC\tSum\tCarry");
      $display("----------------------------------------------");
            A=0; B=0; C=0;
        #10 A=0; B=0; C=1;
        #10 A=0; B=1; C=0;
        #10 A=0; B=1; C=1;
        #10 A=1; B=0; C=0;
        #10 A=1; B=0; C=1;
        #10 A=1; B=1; C=0;
        #10 A=1; B=1; C=1;
    end

  initial
    $monitor("%4d\t%b\t%b\t%b\t%b\t%b", $time, A, B, C, w1, w2);
endmodule